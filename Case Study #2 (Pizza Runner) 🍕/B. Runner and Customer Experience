--1. How many runners signed up for each 1 week period? (i.e. week starts 2021-01-01)
SELECT TO_CHAR(registration_date, 'WW') AS registration_week, COUNT(*)
FROM pizza_runner.runners
GROUP BY registration_week
ORDER BY registration_week;

--2. What was the average time in minutes it took for each runner to arrive at the Pizza Runner HQ to pickup the order?
WITH times_per_order AS (
SELECT runner_id, pickup_time - order_time AS time_per_order
FROM t_customer_orders
LEFT JOIN t_runner_orders ON t_customer_orders.order_id = t_runner_orders.order_id)
SELECT runner_id, TO_CHAR(AVG(time_per_order), 'MI') AS avg_time
FROM times_per_order
GROUP BY runner_id
ORDER BY runner_id;

--3. Is there any relationship between the number of pizzas and how long the order takes to prepare?
WITH times_per_order AS (
  SELECT COUNT(pizza_id) AS pizza_count, pickup_time - order_time AS time_per_order
  FROM t_customer_orders
  LEFT JOIN t_runner_orders ON t_customer_orders.order_id = t_runner_orders.order_id
  WHERE cancellation = ''
  GROUP BY pickup_time, order_time)
SELECT pizza_count, TO_CHAR(AVG(time_per_order), 'MI') AS avg_time
FROM times_per_order
GROUP BY pizza_count
ORDER BY pizza_count;

--4. What was the average distance travelled for each customer?
SELECT customer_id, AVG(distance) AS avg_distance
FROM t_runner_orders
LEFT JOIN t_customer_orders ON t_customer_orders.order_id = t_runner_orders.order_id
WHERE cancellation = ''
GROUP BY customer_id
ORDER BY customer_id;

--5. What was the difference between the longest and shortest delivery times for all orders?
SELECT MAX(duration)-MIN(duration) AS difference
FROM t_runner_orders
WHERE cancellation = '';

--6. What was the average speed for each runner for each delivery and do you notice any trend for these values?
SELECT runner_id, order_id, 60*(distance/duration) AS speed
FROM t_runner_orders
WHERE distance != 0 AND duration != 0
GROUP BY runner_id, order_id, distance, duration
ORDER BY runner_id, order_id;

--7. What is the successful delivery percentage for each runner?
SELECT runner_id,
	ROUND(100 * SUM(CASE
    	WHEN cancellation = '' THEN 1
        ELSE 0
        END) / COUNT(*), 0) AS percentage
FROM t_runner_orders
GROUP BY runner_id
ORDER BY runner_id;

--OR

WITH total_delivered AS (
  SELECT runner_id, 
    SUM(CASE
        WHEN cancellation = '' THEN 1
        ELSE 0
        END) AS successful_deliveries,
    COUNT(t_runner_orders.order_id) AS total_deliveries
  FROM t_runner_orders
  GROUP BY t_runner_orders.runner_id)
SELECT runner_id, 100*CAST(successful_deliveries AS FLOAT)/CAST(total_deliveries AS FLOAT) AS percentage
FROM total_delivered
GROUP BY runner_id, successful_deliveries, total_deliveries
ORDER BY runner_id;
